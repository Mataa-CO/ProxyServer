# MataaProxy - HTTP/HTTPS Proxy Server

This ASP.NET Core application acts as an HTTP/HTTPS proxy that forwards requests to target URLs and returns the responses.

## HTTPS Support

✅ **Full HTTPS Support**: The proxy supports both HTTP and HTTPS targets:
- **Defaults to HTTPS**: When no scheme is specified, HTTPS is used automatically
- **Custom SSL Validation**: Accepts certificates that might be rejected by browsers
- **TLS 1.2/1.3 Support**: Uses modern TLS protocols
- **Self-signed Certificates**: Can proxy to sites with self-signed certificates
- **Certificate Warnings**: Logs SSL issues but continues connection (like a VPN)

## Usage Methods

### Method 1: Using the Proxy Controller (Recommended)

Send requests to: `https://yourproxy.com/proxy/{target-url}`

Examples:
- `GET https://yourproxy.com/proxy/google.com` - Forwards to Google (HTTPS)
- `GET https://yourproxy.com/proxy/http://example.com` - Forwards to HTTP site
- `GET https://yourproxy.com/proxy/self-signed-site.com` - Works with self-signed certs
- `POST https://yourproxy.com/proxy/httpbin.org/post` - Forwards POST request to httpbin
- `GET https://yourproxy.com/proxy/api.github.com/users/octocat` - Forwards to GitHub API

### Method 2: Using the Middleware with Header

Send requests to any endpoint with the `X-Target-URL` header:
curl -H "X-Target-URL: google.com" https://yourproxy.com/any-path
curl -H "X-Target-URL: https://secure-api.com" https://yourproxy.com/
## Features

- ✅ Forwards all HTTP methods (GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD)
- ✅ **Full HTTPS Support** with custom certificate validation
- ✅ Supports both HTTP and HTTPS targets
- ✅ Works with self-signed certificates
- ✅ TLS 1.2 and TLS 1.3 support
- ✅ Preserves request headers (except hop-by-hop headers)
- ✅ Forwards request body and query parameters
- ✅ Returns original response headers and body
- ✅ Auto-adds HTTPS scheme if not specified
- ✅ Proper error handling (502 Bad Gateway, 504 Timeout, etc.)
- ✅ Logging for debugging and SSL issues

## Examples

### HTTPS Examples# Forward to HTTPS site (default)
curl https://yourproxy.com/proxy/github.com/api/users/octocat

# Forward to site with self-signed certificate
curl https://yourproxy.com/proxy/localhost:8080/api/data

# Explicit HTTPS
curl https://yourproxy.com/proxy/https://secure-api.example.com/data
### HTTP Examples# Forward to HTTP site (explicit)
curl https://yourproxy.com/proxy/http://httpbin.org/get

# Using middleware with HTTP
curl -H "X-Target-URL: http://httpbin.org/post" \
     -X POST \
     -H "Content-Type: application/json" \
     -d '{"test": "data"}' \
     https://yourproxy.com/
### Mixed Protocol Examples# The proxy can handle any combination
curl https://yourproxy.com/proxy/http://site1.com    # HTTP target
curl https://yourproxy.com/proxy/https://site2.com   # HTTPS target  
curl https://yourproxy.com/proxy/site3.com           # Defaults to HTTPS
## Security Considerations

⚠️ **Warning**: This proxy forwards requests to any URL. In production, consider:
- Adding URL whitelisting/blacklisting
- Authentication and authorization
- Rate limiting
- Request size limits
- Monitoring and logging
- **Certificate Validation**: Currently accepts all certificates for proxy functionality

## SSL/HTTPS Configuration

The proxy is configured with:
- **Certificate Validation**: Custom validation that logs issues but allows connections
- **TLS Protocols**: Supports TLS 1.2 and TLS 1.3
- **Self-signed Support**: Works with self-signed certificates
- **SSL Error Logging**: Logs certificate validation issues for debugging

## Configuration

The proxy is configured with:
- 5-minute timeout for requests
- Auto-redirect disabled (lets client handle redirects)
- Cookie management disabled
- Custom User-Agent: "MataaProxy/1.0"
- Full HTTPS/SSL support with custom certificate validation