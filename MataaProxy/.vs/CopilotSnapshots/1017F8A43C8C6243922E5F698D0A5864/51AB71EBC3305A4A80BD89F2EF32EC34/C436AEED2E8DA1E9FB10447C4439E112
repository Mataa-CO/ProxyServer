using System.Net.Security;
using System.Security.Cryptography.X509Certificates;

var builder = WebApplication.CreateBuilder(args);

builder.Services.AddControllers();

// Configure HttpClientFactory
builder.Services.AddHttpClient();

// Add a named HttpClient that accepts any SSL certificate (use with caution in production)
builder.Services.AddHttpClient("UnsafeProxy")
    .ConfigurePrimaryHttpMessageHandler(() => new HttpClientHandler
    {
        ServerCertificateCustomValidationCallback = HttpClientHandler.DangerousAcceptAnyServerCertificateValidator
    });

builder.Services.AddCors(options => options.AddPolicy("Policy_Allow_All",
                builder =>
                {
                    builder
                    .AllowAnyOrigin()
                    .AllowAnyMethod()
                    .AllowAnyHeader();
                }));


// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen(c =>
{
    c.SwaggerDoc("v1", new Microsoft.OpenApi.Models.OpenApiInfo 
    { 
        Title = "MataaProxy API", 
        Version = "v1",
        Description = "HTTP/HTTPS Proxy Server API"
    });
});

var app = builder.Build();

// Enable Swagger in all environments (you can customize this as needed)
app.UseSwagger();
app.UseSwaggerUI(c =>
{
    c.SwaggerEndpoint("/swagger/v1/swagger.json", "MataaProxy API v1");
    c.RoutePrefix = string.Empty; // Makes Swagger UI available at root URL
});

// Enable CORS
app.UseCors("Policy_Allow_All");

app.UseHttpsRedirection();

app.UseAuthorization();

app.MapControllers();

app.Run();
