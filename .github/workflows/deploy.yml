name: MataaProxy CI/CD Workflow
# This workflow builds the AuthService application, pushes it to Docker Hub, and deploys it to different environments based on the branch.

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  PROJECT_NAME: MataaProxy


jobs:
  build-dev:
   if: github.ref == 'refs/heads/development'
   name: Build MataaProxy for Development
   runs-on: ubuntu-latest

   steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.110'
    - name: Restore dependencies
      run: dotnet restore MataaProxy/MataaProxy/MataaProxy.csproj

    - name: Build MataaProxy
      run: dotnet build MataaProxy/MataaProxy/MataaProxy.csproj --configuration Release -o ./output
    - name: Upload AuthService Artifact
      uses: actions/upload-artifact@v4
      with:
        name: output
        path: ./output/
        retention-days: 1
  
      
          
  deploy-to-development:
    if: github.ref == 'refs/heads/development' 
    name: Deploy MataaProxy to Development VPS
    runs-on: ubuntu-latest
    needs: build-dev
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.110'
      - name: Download MataaProxy Artifact
        uses: actions/download-artifact@v4
        with:
          name: output
          path: ./output/
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy  via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
        
      - name: Copy build Files
        run: rsync -avz --delete -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" ./output/ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/var/MataaProxy/
      - name: Restart  MataaProxy Service
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            sudo systemctl restart MataaProxy.service
            systemctl status MataaProxy.service --no-pager

      - name: Notify Slack - Deployment to Complete
        if: success()    
        uses: slackapi/slack-github-action@v1.24.0
        with: 
            
            
            payload: |
                  {                        
                    "channel": "${{ secrets.SLACK_CHANNEL }}",                                                                   
                    "text": "üöÄ *Deployment Completed!*\nüì¶ *Project:* ${{ env.PROJECT_NAME }}\nüåç *Environment:* deveploment \n‚úÖ *Status:* Success\nüìò *Repo:* ${{ github.repository }}\nüåø *Branch:* ${{ github.ref_name  }}"
                    }
        env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        

                
  build-docker-image:
    if: github.ref == 'refs/heads/main' 
    name: Build and Push MataaProxy Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push MataaProxy Docker image
        # This step builds the Docker image and pushes it to Docker Hub
        run: |
              docker build -f Dockerfile -t ${{ env.DOCKERHUB_USERNAME }}/ems:mataaproxy-latest .
              docker push ${{ env.DOCKERHUB_USERNAME }}/ems:mataaproxy-latest
  deploy-to-vps:
   name: Deploy VMS to  VPS
   if: github.ref == 'refs/heads/main'
   runs-on: ubuntu-latest
   needs: build-docker-image
   steps:
        - name :  deploy-to-vps
          uses: appleboy/ssh-action@v1.2.2
          with:
              host: ${{ secrets.BACKEND_HOST}}
              username: ${{ secrets.DEPLOY_USER  }}
              key: ${{ secrets.DEPLOY_KEY  }}
              script: |
                 

                 
                  echo "${{ env.DOCKERHUB_TOKEN }}" | docker login --username "${{ env.DOCKERHUB_USERNAME }}" --password-stdin
                    docker pull ${{ env.DOCKERHUB_USERNAME }}/ems:vms-latest
                    docker stop MataaProxy || true
                    docker rm MataaProxy || true
                     docker run -d --restart=always --name MataaProxy -p 5292:5292  mataaa/ems:mataaproxy-latest

        - name: Notify Slack - Deployment Complete
          if: success()
          uses: slackapi/slack-github-action@v1.24.0
          with:
            payload: |
                  {
                    "channel": "${{ secrets.SLACK_CHANNEL }}",
                    "text": "üöÄ *Deployment Completed!*\nüì¶ *Project:* ${{ env.PROJECT_NAME }}\nüåç *Environment:* Staging \n‚úÖ *Status:* Success\nüìò *Repo:* ${{ github.repository }}\nüåø *Branch:* ${{ github.ref_name }}"
                  }
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}









